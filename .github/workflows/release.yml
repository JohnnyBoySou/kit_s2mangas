name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write
  pull-requests: write
  actions: write
  checks: write
  repository-projects: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5
        with:
          # This makes Actions fetch all Git history so that Changesets can generate changelogs with the correct commits
          fetch-depth: 0

      - name: Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build packages
        run: pnpm build

      - name: Run tests
        run: pnpm test

      - name: Check for changesets
        id: changesets
        run: |
          if pnpm changeset status | grep -q "NO packages to be bumped"; then
            echo "no-changes=true" >> $GITHUB_OUTPUT
            echo "ðŸ¦‹ No changesets found. Skipping release."
          else
            echo "no-changes=false" >> $GITHUB_OUTPUT
            echo "ðŸ¦‹ Changesets found. Proceeding with release."
          fi

      - name: Setup NPM authentication
        if: steps.changesets.outputs.no-changes == 'false'
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
          echo "registry=https://registry.npmjs.org/" >> ~/.npmrc
          echo "always-auth=true" >> ~/.npmrc

      - name: Create Release Pull Request or Publish to npm
        if: steps.changesets.outputs.no-changes == 'false'
        id: changesets-action
        uses: changesets/action@v1
        with:
          # This expects you to have a script called release which does a build for your packages and calls changeset publish
          publish: pnpm release
          title: "Release: Version Packages"
          commit: "chore: release packages"
          createGithubReleases: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip Release
        if: steps.changesets.outputs.no-changes == 'true'
        run: |
          echo "ðŸ¦‹ No changesets found. Release skipped."
          echo "To create a release, add changesets using: pnpm changeset"
